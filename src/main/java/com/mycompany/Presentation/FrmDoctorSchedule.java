/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.Presentation;

import com.mycompany.Models.AppointmentStatus;
import com.mycompany.Models.Doctor;
import com.mycompany.Services.AppointmentService;
import com.mycompany.Services.ServiceLocator;

/**
 *
 * @author camil
 */
public class FrmDoctorSchedule extends javax.swing.JInternalFrame {

    private final AppointmentService appointmentService;
    private final Doctor doctor;
    private java.util.List<com.mycompany.Models.Appointment> appointments;

    /**
     * Creates new form FrmDoctorSchedule
     *
     * @param appointmentService
     * @param doctor
     */
    public FrmDoctorSchedule(AppointmentService appointmentService, Doctor doctor) {
        initComponents();
        this.appointmentService = appointmentService;
        this.doctor = doctor;

        loadSchedule();
    }

    private void loadSchedule() {
        // Obtener Citas Programadas del doctor
        appointments = appointmentService.getAppointmentsByDoctor(doctor.getId(), AppointmentStatus.PROGRAMADA);

        // Modelo de la tabla
        javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(
                new Object[]{"Patient", "Document", "Date", "Select"}, 0
        ) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return (columnIndex == 3) ? Boolean.class : String.class;
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 3;
            }
        };

        // Llenamos la tabla
        for (var a : appointments) {
            model.addRow(new Object[]{
                a.getPatient().getFullName(),
                a.getPatient().getDocumentNumber(),
                a.getScheduledAtAsString(),
                false});
        }

        tblSchedule.setModel(model);
        model.addTableModelListener(e -> enforceSingleSelection(model, e.getFirstRow(), e.getColumn()));
    }

    private void enforceSingleSelection(javax.swing.table.DefaultTableModel model, int row, int column) {
        if (column == 3 && Boolean.TRUE.equals(model.getValueAt(row, column))) {
            for (int i = 0; i < model.getRowCount(); i++) {
                if (i != row) {
                    model.setValueAt(false, i, 3);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        upperPanel = new javax.swing.JPanel();
        ScrollPane = new javax.swing.JScrollPane();
        tblSchedule = new javax.swing.JTable();
        btnCancel = new javax.swing.JButton();
        btnRegisterConsultation = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblTitle.setText("Schedule");

        upperPanel.setBackground(new java.awt.Color(102, 102, 255));
        upperPanel.setPreferredSize(new java.awt.Dimension(800, 50));

        javax.swing.GroupLayout upperPanelLayout = new javax.swing.GroupLayout(upperPanel);
        upperPanel.setLayout(upperPanelLayout);
        upperPanelLayout.setHorizontalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        upperPanelLayout.setVerticalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        tblSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient", "Document", "Date", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSchedule.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblSchedule.setRowHeight(40);
        tblSchedule.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblSchedule.setShowGrid(true);
        ScrollPane.setViewportView(tblSchedule);

        btnCancel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnRegisterConsultation.setBackground(new java.awt.Color(102, 102, 225));
        btnRegisterConsultation.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnRegisterConsultation.setForeground(new java.awt.Color(255, 255, 255));
        btnRegisterConsultation.setText("Register Consultation");
        btnRegisterConsultation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterConsultationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(upperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnRegisterConsultation)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(339, 339, 339)
                            .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(48, 48, 48)
                            .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(upperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRegisterConsultation, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnRegisterConsultationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterConsultationActionPerformed
        int selectedRow = -1;
        var model = (javax.swing.table.DefaultTableModel) tblSchedule.getModel();

        for (int i = 0; i < model.getRowCount(); i++) {
            if (Boolean.TRUE.equals(model.getValueAt(i, 3))) {
                selectedRow = i;
                break;
            }
        }

        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select one appointment to register a consultation.");
            return;
        }

        // Obtenemos la cita seleccionada
        var appointment = appointments.get(selectedRow);

        // Creamos el frame de consulta
        FrmConsultationCreate frm = new FrmConsultationCreate(
                appointment,
                ServiceLocator.getInstance().getConsultationService(),
                appointmentService,
                this::loadSchedule // para refrescar al guardar
        );

        // Mostrar dentro del mismo contenedor MDI
        this.getDesktopPane().add(frm);
        frm.setVisible(true);
        frm.toFront();
    }//GEN-LAST:event_btnRegisterConsultationActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRegisterConsultation;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblSchedule;
    private javax.swing.JPanel upperPanel;
    // End of variables declaration//GEN-END:variables
}
